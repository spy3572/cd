import java.util.Scanner;

public class LeftRecursionElimination {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter Number of Productions: ");
        int num = scanner.nextInt();
        scanner.nextLine(); // Consume newline

        System.out.println("Enter the grammar as A -> Aa / b:");
        for (int i = 0; i < num; i++) {
            String production = scanner.nextLine().trim();
            eliminateLeftRecursion(production);
        }

        scanner.close();
    }

    public static void eliminateLeftRecursion(String production) {
        String[] parts = production.split("->");
        char nonTerminal = parts[0].trim().charAt(0);
        String[] choices = parts[1].split("/");

        System.out.println("GRAMMAR: " + production); // Displaying input grammar

        if (choices[0].trim().startsWith("" + nonTerminal)) {
            // Left recursion detected
            String alpha = choices[0].trim().substring(1); // part after the non-terminal
            String beta = choices[1].trim();

            System.out.println(nonTerminal + " is left recursive.");
            System.out.println(nonTerminal + " -> " + beta + nonTerminal + "'");
            System.out.println(nonTerminal + "' -> " + alpha + nonTerminal + "' / epsilon");
        } else {
            // No left recursion
            System.out.println(nonTerminal + " is not left recursive.");
        }
    }
}



